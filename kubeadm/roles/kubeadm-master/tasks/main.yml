---
# tasks file for kube-adm-install
- name: Upgrade all packages
  ansible.builtin.yum:
    name: '*'
    state: latest

- name: Create repository file
  ansible.builtin.file:
    path: /etc/yum.repos.d/kubernetes.repo
    state: touch

- name: Add kubernetes repository
  ansible.builtin.blockinfile:
    path: /etc/yum.repos.d/kubernetes.repo
    block: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
      enabled=1
      gpgcheck=1
      gpgkey=https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      #exclude=kubelet kubeadm kubectl

- name: Install a list of packages with a list variable
  ansible.builtin.yum:
    name: "{{ item }}"
  with_items: 
    - containerd
    - iproute-tc
    - httpd-tools
    - kubelet 
    - kubeadm 
    - kubectl

- name: Restart service containerd
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
    enabled: true
  with_items:
    - containerd.service
    - kubelet.service

- name: Ensure SELinux is set to enforcing mode
  ansible.builtin.lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: SELINUX=disabled

- name: Set controlplane hostname
  ansible.builtin.hostname:
    name: controlplane

- lineinfile:
    path: /etc/hosts
    insertbefore: '^127'
    line: '{{ ansible_eth0.ipv4.address }} controlplane'
    state: present

- ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: true

- name: Turn off swapping
  ansible.builtin.command: sudo swapoff -a
  
- name: Run modprobe overlay
  ansible.builtin.command: sudo modprobe overlay

- name: Run modprobe netfilter
  ansible.builtin.command: sudo modprobe br_netfilter


- name: Create kubeadm cluster on controlplane node
  ansible.builtin.command: sudo kubeadm init --pod-network-cidr=10.244.0.0/16 --control-plane-endpoint={{ ansible_eth0.ipv4.address }} --apiserver-advertise-address={{ ansible_eth0.ipv4.address }}
  register: cluster_created

- name: Create configmap
  ansible.builtin.command: "{{ item }}"
  with_items: 
  - mkdir -p /home/ec2-user/.kube
  - sudo cp -i /etc/kubernetes/admin.conf /home/ec2-user/.kube/config
  - sudo chown ec2-user:ec2-user /home/ec2-user/.kube/config


- name: Deploy Weave network plugin in cluster
  ansible.builtin.command: "{{ item }}"
  become_user: ec2-user
  with_items: 
  - kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml

- name: Create kubeadm cluster on controlplane node
  ansible.builtin.command: kubeadm token create --print-join-command
  become_user: ec2-user
  register: cluster_join
...
